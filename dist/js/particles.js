(function() {
  var addBlob, alpha, heigth, i, svg, width;

  console.log('Hey');

  width = 800;

  heigth = 800;

  svg = d3.select('body').append('svg').attr('width', width).attr('height', heigth);

  svg.append('rect').attr('width', width).attr('height', heigth).style('fill', 'black');

  i = 0;

  addBlob = function(x, y) {
    i++;
    return svg.append('circle').attr('class', 'blob').attr('cx', x).attr('cy', y).attr('r', 3).style('stroke', d3.hsl((i = (i + 1) % 360), 1, .5)).transition().delay(0).duration(1000).ease(Math.sqrt).attr('r', 80).transition().duration(1000).ease(function(x) {
      return x * x;
    }).attr('r', 3).style('stroke', 'white').style('opacity', 0).remove();
  };

  alpha = 0;

  setInterval(function() {
    var kX, kY, mX, mY, r;
    r = 200;
    mX = width / 2;
    mY = heigth / 2;
    alpha += .1;
    kX = Math.sin(alpha) * r;
    kY = Math.cos(alpha) * r;
    return addBlob(mX + kX, mY + kY);
  }, 35);

  svg.on('mousemove', function() {
    var mosueX, mosueY, mousePos;
    mousePos = d3.mouse(this);
    mosueX = mousePos[0];
    mosueY = mousePos[1];
    return addBlob(mosueX, mosueY);
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpY2xlcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFBOztFQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksS0FBWjs7RUFFQSxLQUFBLEdBQVM7O0VBQ1QsTUFBQSxHQUFTOztFQUdULEdBQUEsR0FBTSxFQUFFLENBQUMsTUFBSCxDQUFVLE1BQVYsQ0FBaUIsQ0FBQyxNQUFsQixDQUF5QixLQUF6QixDQUNKLENBQUMsSUFERyxDQUNFLE9BREYsRUFDVyxLQURYLENBRUosQ0FBQyxJQUZHLENBRUUsUUFGRixFQUVZLE1BRlo7O0VBSU4sR0FBRyxDQUFDLE1BQUosQ0FBVyxNQUFYLENBQ0UsQ0FBQyxJQURILENBQ1EsT0FEUixFQUNpQixLQURqQixDQUVFLENBQUMsSUFGSCxDQUVRLFFBRlIsRUFFa0IsTUFGbEIsQ0FHRSxDQUFDLEtBSEgsQ0FHUyxNQUhULEVBR2lCLE9BSGpCOztFQUtBLENBQUEsR0FBSTs7RUFDSixPQUFBLEdBQVUsU0FBQyxDQUFELEVBQUksQ0FBSjtJQUNSLENBQUE7V0FFQSxHQUFHLENBQUMsTUFBSixDQUFXLFFBQVgsQ0FDRSxDQUFDLElBREgsQ0FDUSxPQURSLEVBQ2lCLE1BRGpCLENBRUUsQ0FBQyxJQUZILENBRVEsSUFGUixFQUVjLENBRmQsQ0FHRSxDQUFDLElBSEgsQ0FHUSxJQUhSLEVBR2MsQ0FIZCxDQUlFLENBQUMsSUFKSCxDQUlRLEdBSlIsRUFJYSxDQUpiLENBS0UsQ0FBQyxLQUxILENBS1MsUUFMVCxFQUttQixFQUFFLENBQUMsR0FBSCxDQUFPLENBQUMsQ0FBQSxHQUFJLENBQUMsQ0FBQSxHQUFJLENBQUwsQ0FBQSxHQUFVLEdBQWYsQ0FBUCxFQUE0QixDQUE1QixFQUErQixFQUEvQixDQUxuQixDQU1BLENBQUMsVUFORCxDQUFBLENBTWEsQ0FBQyxLQU5kLENBTW9CLENBTnBCLENBTXNCLENBQUMsUUFOdkIsQ0FNZ0MsSUFOaEMsQ0FPRSxDQUFDLElBUEgsQ0FPUSxJQUFJLENBQUMsSUFQYixDQVFFLENBQUMsSUFSSCxDQVFRLEdBUlIsRUFRYSxFQVJiLENBVUEsQ0FBQyxVQVZELENBQUEsQ0FVYSxDQUFDLFFBVmQsQ0FVdUIsSUFWdkIsQ0FXRSxDQUFDLElBWEgsQ0FXUSxTQUFDLENBQUQ7YUFBTyxDQUFBLEdBQUU7SUFBVCxDQVhSLENBWUUsQ0FBQyxJQVpILENBWVEsR0FaUixFQVlhLENBWmIsQ0FhRSxDQUFDLEtBYkgsQ0FhUyxRQWJULEVBYW1CLE9BYm5CLENBY0UsQ0FBQyxLQWRILENBY1MsU0FkVCxFQWNvQixDQWRwQixDQWVFLENBQUMsTUFmSCxDQUFBO0VBSFE7O0VBcUJWLEtBQUEsR0FBUTs7RUFDUixXQUFBLENBQVksU0FBQTtBQUNWLFFBQUE7SUFBQSxDQUFBLEdBQUk7SUFDSixFQUFBLEdBQUssS0FBQSxHQUFNO0lBQ1gsRUFBQSxHQUFLLE1BQUEsR0FBTztJQUNaLEtBQUEsSUFBUztJQUVULEVBQUEsR0FBSyxJQUFJLENBQUMsR0FBTCxDQUFTLEtBQVQsQ0FBQSxHQUFrQjtJQUN2QixFQUFBLEdBQUssSUFBSSxDQUFDLEdBQUwsQ0FBUyxLQUFULENBQUEsR0FBa0I7V0FFdkIsT0FBQSxDQUFRLEVBQUEsR0FBSyxFQUFiLEVBQWlCLEVBQUEsR0FBSyxFQUF0QjtFQVRVLENBQVosRUFXRSxFQVhGOztFQWNBLEdBQUcsQ0FBQyxFQUFKLENBQU8sV0FBUCxFQUFvQixTQUFBO0FBQ2xCLFFBQUE7SUFBQSxRQUFBLEdBQVcsRUFBRSxDQUFDLEtBQUgsQ0FBUyxJQUFUO0lBQ1gsTUFBQSxHQUFTLFFBQVMsQ0FBQSxDQUFBO0lBQ2xCLE1BQUEsR0FBUyxRQUFTLENBQUEsQ0FBQTtXQUVsQixPQUFBLENBQVEsTUFBUixFQUFnQixNQUFoQjtFQUxrQixDQUFwQjtBQXBEQSIsImZpbGUiOiJwYXJ0aWNsZXMuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zb2xlLmxvZyAnSGV5J1xyXG5cclxud2lkdGggID0gODAwXHJcbmhlaWd0aCA9IDgwMFxyXG5cclxuIyBjcmVhdGUgc3ZnXHJcbnN2ZyA9IGQzLnNlbGVjdCgnYm9keScpLmFwcGVuZCgnc3ZnJylcclxuICAuYXR0cignd2lkdGgnLCB3aWR0aClcclxuICAuYXR0cignaGVpZ2h0JywgaGVpZ3RoKVxyXG5cclxuc3ZnLmFwcGVuZCgncmVjdCcpXHJcbiAgLmF0dHIoJ3dpZHRoJywgd2lkdGgpXHJcbiAgLmF0dHIoJ2hlaWdodCcsIGhlaWd0aClcclxuICAuc3R5bGUoJ2ZpbGwnLCAnYmxhY2snKVxyXG5cclxuaSA9IDBcclxuYWRkQmxvYiA9ICh4LCB5KSAtPlxyXG4gIGkrK1xyXG5cclxuICBzdmcuYXBwZW5kKCdjaXJjbGUnKVxyXG4gICAgLmF0dHIoJ2NsYXNzJywgJ2Jsb2InKVxyXG4gICAgLmF0dHIoJ2N4JywgeClcclxuICAgIC5hdHRyKCdjeScsIHkpXHJcbiAgICAuYXR0cigncicsIDMpXHJcbiAgICAuc3R5bGUoJ3N0cm9rZScsIGQzLmhzbCgoaSA9IChpICsgMSkgJSAzNjApLCAxLCAuNSkpXHJcbiAgLnRyYW5zaXRpb24oKS5kZWxheSgwKS5kdXJhdGlvbigxMDAwKVxyXG4gICAgLmVhc2UoTWF0aC5zcXJ0KVxyXG4gICAgLmF0dHIoJ3InLCA4MClcclxuICAgICMgLnN0eWxlKCdzdHJva2UnLCAncmVkJylcclxuICAudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApXHJcbiAgICAuZWFzZSgoeCkgLT4geCp4KVxyXG4gICAgLmF0dHIoJ3InLCAzKVxyXG4gICAgLnN0eWxlKCdzdHJva2UnLCAnd2hpdGUnKVxyXG4gICAgLnN0eWxlKCdvcGFjaXR5JywgMClcclxuICAgIC5yZW1vdmUoKVxyXG5cclxuXHJcbmFscGhhID0gMFxyXG5zZXRJbnRlcnZhbCAoKSAtPlxyXG4gIHIgPSAyMDBcclxuICBtWCA9IHdpZHRoLzJcclxuICBtWSA9IGhlaWd0aC8yXHJcbiAgYWxwaGEgKz0gLjFcclxuXHJcbiAga1ggPSBNYXRoLnNpbihhbHBoYSkgKiByXHJcbiAga1kgPSBNYXRoLmNvcyhhbHBoYSkgKiByXHJcblxyXG4gIGFkZEJsb2IobVggKyBrWCwgbVkgKyBrWSlcclxuXHJcbiwgMzVcclxuXHJcbiMgbW91c2UgaGFuZGxlclxyXG5zdmcub24gJ21vdXNlbW92ZScsICgpIC0+XHJcbiAgbW91c2VQb3MgPSBkMy5tb3VzZSh0aGlzKVxyXG4gIG1vc3VlWCA9IG1vdXNlUG9zWzBdXHJcbiAgbW9zdWVZID0gbW91c2VQb3NbMV1cclxuXHJcbiAgYWRkQmxvYihtb3N1ZVgsIG1vc3VlWSlcclxuXHJcbiJdfQ==
