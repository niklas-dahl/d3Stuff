(function() {
  var addNode, alpha, fill, forceLayout, height, infoText, nodeId, nodes, render, svg, width;

  width = 960;

  height = 500;

  fill = d3.scale.category10();

  svg = d3.select('body').append('svg').attr('width', width).attr('height', height);

  infoText = svg.append('text').attr('x', 30).attr('y', height - 30).text('infoText');

  nodes = [];

  forceLayout = d3.layout.force().nodes(nodes).size([width, height]);

  forceLayout.on('tick', function() {
    nodes.forEach(function(n, i) {
      n.alive++;
      if (n.alive > 1000) {
        return nodes.splice(i, 1);
      }
    });
    infoText.text("Nodes: " + nodes.length);
    return render();
  });

  render = function() {
    var circles;
    circles = svg.selectAll('circle').data(nodes, function(n) {
      return n.id;
    });
    circles.enter().append('circle').attr('r', 10).style('fill', function(n, i) {
      return fill(n.id);
    });
    circles.attr('cx', function(n) {
      return n.x;
    }).attr('cy', function(n) {
      return n.y;
    });
    return circles.exit().remove();
  };

  render();

  nodeId = 0;

  addNode = function(x, y) {
    nodes.push({
      x: x,
      y: y,
      alive: 0,
      id: nodeId++
    });
    forceLayout.start();
    return render();
  };

  alpha = 0;

  setInterval(function() {
    var kX, kY, mX, mY, r;
    r = 200;
    mX = width / 2;
    mY = height / 2;
    alpha += .3;
    kX = Math.sin(alpha) * r;
    kY = Math.cos(alpha) * r;
    return addNode(mX + kX, mY + kY);
  }, 100);

}).call(this);

//# sourceMappingURL=data:application/json;base64,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QUFBLEdBQWtCO1dBRXZCLE9BQUEsQ0FBUSxFQUFBLEdBQUssRUFBYixFQUFpQixFQUFBLEdBQUssRUFBdEI7RUFUVSxDQUFaLEVBV0UsR0FYRjtBQS9EQSIsImZpbGUiOiJmR3JhcGguanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJ3aWR0aCA9IDk2MFxyXG5oZWlnaHQgPSA1MDBcclxuZmlsbCA9IGQzLnNjYWxlLmNhdGVnb3J5MTAoKVxyXG5cclxuc3ZnID0gZDMuc2VsZWN0KCdib2R5JykuYXBwZW5kKCdzdmcnKVxyXG4gIC5hdHRyKCd3aWR0aCcsIHdpZHRoKVxyXG4gIC5hdHRyKCdoZWlnaHQnLCBoZWlnaHQpXHJcblxyXG5pbmZvVGV4dCA9IHN2Zy5hcHBlbmQoJ3RleHQnKVxyXG4gIC5hdHRyKCd4JywgMzApXHJcbiAgLmF0dHIoJ3knLCBoZWlnaHQtMzApXHJcbiAgLnRleHQoJ2luZm9UZXh0JylcclxuXHJcbm5vZGVzID0gW11cclxuXHJcbmZvcmNlTGF5b3V0ID0gZDMubGF5b3V0LmZvcmNlKClcclxuICAgIC5ub2Rlcyhub2RlcylcclxuICAgICMgLmdyYXZpdHkoMClcclxuICAgIC5zaXplKFt3aWR0aCwgaGVpZ2h0XSlcclxuICAgICMgLnN0YXJ0KClcclxuXHJcbmZvcmNlTGF5b3V0Lm9uICd0aWNrJywgKCkgLT5cclxuICBub2Rlcy5mb3JFYWNoIChuLCBpKSAtPlxyXG4gICAgbi5hbGl2ZSsrXHJcbiAgICBpZiBuLmFsaXZlID4gMTAwMFxyXG4gICAgICBub2Rlcy5zcGxpY2UoaSwgMSlcclxuXHJcbiAgaW5mb1RleHQudGV4dChcIk5vZGVzOiAje25vZGVzLmxlbmd0aH1cIilcclxuICByZW5kZXIoKVxyXG5cclxucmVuZGVyID0gKCkgLT5cclxuICBjaXJjbGVzID0gc3ZnLnNlbGVjdEFsbCgnY2lyY2xlJykuZGF0YShub2RlcywgKG4pIC0+IG4uaWQpXHJcblxyXG4gICMgZW50ZXJcclxuICBjaXJjbGVzLmVudGVyKCkuYXBwZW5kKCdjaXJjbGUnKVxyXG4gICAgLmF0dHIoJ3InLCAxMClcclxuICAgIC5zdHlsZSgnZmlsbCcsIChuLCBpKSAtPiBmaWxsKG4uaWQpKVxyXG5cclxuICAjIHVwZGF0ZVxyXG4gIGNpcmNsZXNcclxuICAgIC5hdHRyKCdjeCcsIChuKSAtPiBuLngpXHJcbiAgICAuYXR0cignY3knLCAobikgLT4gbi55KVxyXG5cclxuICAjIGV4aXRcclxuICBjaXJjbGVzLmV4aXQoKS5yZW1vdmUoKVxyXG4gICAgIyAuYXR0cigncicsIChkKSAtPiA1KVxyXG4gICAgIyAuYXR0cignY3gnLCAoZCkgLT4gcGFyc2VJbnQoZC5pZCU4MCkgKiAxMCArIDMwKVxyXG4gICAgIyAuYXR0cignY3knLCAoZCkgLT4gcGFyc2VJbnQoZC5pZC8xMDApICogMTAgKyAzMClcclxuXHJcbnJlbmRlcigpXHJcblxyXG5ub2RlSWQgPSAwXHJcbmFkZE5vZGUgPSAoeCwgeSkgLT5cclxuICBub2Rlcy5wdXNoIHtcclxuICAgIHhcclxuICAgIHlcclxuICAgIGFsaXZlOiAwXHJcbiAgICBpZDogbm9kZUlkKytcclxuICB9XHJcbiAgZm9yY2VMYXlvdXQuc3RhcnQoKVxyXG4gIHJlbmRlcigpXHJcblxyXG5hbHBoYSA9IDBcclxuc2V0SW50ZXJ2YWwgKCkgLT5cclxuICByID0gMjAwXHJcbiAgbVggPSB3aWR0aC8yXHJcbiAgbVkgPSBoZWlnaHQvMlxyXG4gIGFscGhhICs9IC4zXHJcblxyXG4gIGtYID0gTWF0aC5zaW4oYWxwaGEpICogclxyXG4gIGtZID0gTWF0aC5jb3MoYWxwaGEpICogclxyXG5cclxuICBhZGROb2RlKG1YICsga1gsIG1ZICsga1kpXHJcblxyXG4sIDEwMCJdfQ==
